member(type, name) ::= <<
private $type$ $name$;
>>

members(cols) ::= <<
$cols: {col | $member(col.type, col.name)$}; separator="\n"$
>>

getMethods(cols) ::=<<
$cols: {col | $getMethod(col)$}; separator="\n\n"$
>>

getMethod(col) ::= <<
/**
     * Gets the $col.name$ field value.
     *
     * @return $col.name$  - the $col.name$.
     */
    public $col.type$ get$col.fieldName$() {
        return $col.name$;
    }
>>

setMethods(cols) ::= <<
$cols: {col | $setMethod(col)$}; separator="\n\n"$
>>

setMethod(col) ::= <<
/**
     * Sets the  $col.name$ field value.
     *
     * @param  $col.name$ - the $col.name$.
     */
    public void set$col.fieldName$($col.type$ $col.name$) {
        this.$col.name$ = $col.name$;
    }
>>

caseStatements(cols) ::= <<
$cols: {col | $caseStatement(col)$}; separator="\n"$
>>

caseStatement(col) ::= <<
case "$col.name$":
    $if(col.uuidType)$$setUuid(col)$
    $elseif(col.dateTimeType)$$setDateTimeCol(col)$
    $elseif(col.integerType)$$setIntegerType(col)$
    $else$$setCol(col)$
    $endif$
    break;
>>

setUuid(col) ::= <<
result.set$col.fieldName$(UUID.fromString(entry.getValue()));
>>

setDateTimeCol(col) ::= <<
result.set$col.fieldName$(DataConverters.converToTimestamp(entry.getValue()));
>>

setIntegerType(col) ::= <<
result.set$col.fieldName$(Integer.parseInt(entry.getValue()));
>>
setCol(col) ::= <<
result.set$col.fieldName$(entry.getValue());
>>